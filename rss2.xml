<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Kazehaya</title>
    <link>http://yoursite.com/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description></description>
    <pubDate>Mon, 05 Mar 2018 04:49:00 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>用 Node.Js Express MongoDB 搭建 Web 应用</title>
      <link>http://yoursite.com/2018/03/03/2018-03-02-nodejs/</link>
      <guid>http://yoursite.com/2018/03/03/2018-03-02-nodejs/</guid>
      <pubDate>Sat, 03 Mar 2018 06:12:09 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;30分钟配置并运行 full stack web 页面， 30分钟完成与DB的交互&lt;/p&gt;
&lt;h2 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;I
        
      
      </description>
      
      <content:encoded><![CDATA[<p>30分钟配置并运行 full stack web 页面， 30分钟完成与DB的交互</p><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>现在大概有上百万个关于用Node.js搭建“Hello，World”的教程。如果你的目标是问候这个世界然后放弃自己的职业生涯，那已经足够了。 然而大部分的我们并不是这样的， 所以我们要寻找更多更好的教程。 我也寻找了不少， 所以总结了很多， 希望这个教程能够对刚开始学习Node.js 或者想从事网页开发的你有所帮助。</p><h2 id="Part-1-15分钟的安装"><a href="#Part-1-15分钟的安装" class="headerlink" title="Part 1 - 15分钟的安装"></a>Part 1 - 15分钟的安装</h2><h3 id="Step-1-安装-Node-js-和-NPM"><a href="#Step-1-安装-Node-js-和-NPM" class="headerlink" title="Step 1 - 安装 Node.js 和 NPM"></a>Step 1 - 安装 Node.js 和 NPM</h3><ol><li>XCode 在Mac上安装XCode</li><li><p>Homebrew 这是Mac上用于package管理的</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ruby -e <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>"</span></span><br></pre></td></tr></table></figure></li><li><p>打开Terminal 安装node.js</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install node</span><br></pre></td></tr></table></figure></li></ol><h3 id="Step2-安装-Express-Generator"><a href="#Step2-安装-Express-Generator" class="headerlink" title="Step2 - 安装 Express Generator"></a>Step2 - 安装 Express Generator</h3><p>Express 是基于Node.js的Web开发框架，可以快速地搭建一个完整功能的网站<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g express-generator</span><br></pre></td></tr></table></figure></p><p>More info: <a href="http://javascript.ruanyifeng.com/nodejs/express.html" target="_blank" rel="noopener">Express</a></p><h3 id="Step3-创建-Express-项目"><a href="#Step3-创建-Express-项目" class="headerlink" title="Step3 - 创建 Express 项目"></a>Step3 - 创建 Express 项目</h3><p>这里我们将会用到Express和Jade，而不是常用的CSS. 因为我们必须用Jade或者其他的模板引擎去得到基于Node/Express的数据。 </p><p>现在我们用express来创建一个叫做 nodetest1 的项目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ express nodetest1</span><br></pre></td></tr></table></figure><p><img src="/uploads/2018-03-02-01.png" alt="alt text"></p><p>More info: <a href="https://segmentfault.com/a/1190000000357534" target="_blank" rel="noopener">Jade</a></p><h3 id="Step4-修改-Dependencies"><a href="#Step4-修改-Dependencies" class="headerlink" title="Step4 - 修改 Dependencies"></a>Step4 - 修改 Dependencies</h3><p>Express-generator 自动帮我们创建了package.json文件</p><p><img src="/uploads/2018-03-02-02.png" alt="alt text"></p><p>这个文件里包含了项目所有的dependencies. 我们将添加MongoDB和Monk, 版本3.0.1/6.0.5</p><p><img src="/uploads/2018-03-02-03.png" alt="alt text"></p><h3 id="Step5-安装-Dependencies"><a href="#Step5-安装-Dependencies" class="headerlink" title="Step5 - 安装 Dependencies"></a>Step5 - 安装 Dependencies</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p>npm 将会根据JSON文件安装所有所需求的dependencies, 包括Express， 我们虽然安装了全局的Express，但是对于指定的项目我们还是需要安装实际的module.<br>现在我们就可以跑项目了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm start</span><br></pre></td></tr></table></figure><p><img src="/uploads/2018-03-02-04.png" alt="alt text"></p><p>如图可见就是我们运行起来的Node.JS的webserver， 下面有一些Express.js的Cheat Sheet</p><p>More info: <a href="https://github.com/azat-co/cheatsheets/tree/master/express4" target="_blank" rel="noopener">Express.js</a></p><h2 id="Part-2-哈哈-既然打开了Node-Js的大门-我们也要高喊一声-“Hello-World”"><a href="#Part-2-哈哈-既然打开了Node-Js的大门-我们也要高喊一声-“Hello-World”" class="headerlink" title="Part 2 哈哈 既然打开了Node.Js的大门 我们也要高喊一声 “Hello, World”"></a>Part 2 哈哈 既然打开了Node.Js的大门 我们也要高喊一声 “Hello, World”</h2><p>随便有你喜欢的IDE或者editor打开我们项目中的 app.js</p><p><img src="/uploads/2018-03-02-05.png" alt="alt text"></p><p>在app.js中我们建了一串Javascript变量， 它们关联到特定的packages，depen， node functionality 和 routes. Routes在setup中把models和controllers组合起来，当然我们也可以用Express来搭建MVC架构， 之后我可以单独的介绍. 我们先暂时忽略Express为我们创建的user route， 我们现在只用到最顶层的route (/node/nodetest1/routes/index.js)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = express();</span><br></pre></td></tr></table></figure><p>这将会初始化Express同时设置所有的app 变量. 下一节中我们会用这些变量配置我们的Express</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app.js</span></span><br><span class="line">app.set(<span class="string">'views'</span>, path.join(dirname, <span class="string">'views'</span>));</span><br><span class="line">app.set(<span class="string">'view engine'</span>, <span class="string">'jade'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// uncomment after placing your favicon in /public</span></span><br><span class="line"><span class="comment">// app.use(favicon(dirname + '/public/favicon.ico'));</span></span><br><span class="line">app.use(logger(<span class="string">'dev'</span>));</span><br><span class="line">app.use(bodyParser.json());</span><br><span class="line">app.use(bodyParser.urlencoded(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;));</span><br><span class="line">app.use(cookieParser());</span><br><span class="line">app.use(express.static(path.join(__dirname, <span class="string">'public'</span>)));</span><br><span class="line"></span><br><span class="line">app.use(<span class="string">'/'</span>, routes);</span><br><span class="line">app.use(<span class="string">'/users'</span>, users);</span><br></pre></td></tr></table></figure><p>More info: <a href="http://blog.csdn.net/qq_14998713/article/details/62416901" target="_blank" rel="noopener">Morgan</a></p>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/03/03/2018-03-02-nodejs/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
